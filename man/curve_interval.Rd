% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curve_interval.R
\name{curve_interval}
\alias{curve_interval}
\title{Curvewise point and interval summaries for tidy data frames of draws from distributions}
\usage{
curve_interval(
  .data,
  ...,
  .along = NULL,
  .width = 0.95,
  .simple_names = TRUE,
  na.rm = FALSE,
  .exclude = c(".chain", ".iteration", ".draw", ".row")
)
}
\arguments{
\item{.data}{Data frame (or grouped data frame as returned by \code{\link[=group_by]{group_by()}})
that contains draws to summarize.}

\item{...}{Bare column names or expressions that, when evaluated in the context of
\code{.data}, represent draws to summarize. If this is empty, then by default all
columns that are not group columns and which are not in \code{.exclude} (by default
\code{".chain"}, \code{".iteration"}, \code{".draw"}, and \code{".row"}) will be summarized.
This can be list columns.}

\item{.along}{Which columns are the input values to the function describing the curve (e.g., the "x"
values). Supports tidyselect syntax, as in \code{dplyr::select()}. Intervals are calculated jointly with
respect to these variables, conditional on all other grouping variables in the data frame. The default
(\code{NULL}) causes \code{curve_interval()} to use all grouping variables in the input data frame, which will
generate the most conservative intervals. However, if you want to calculate intervals for some function
\code{y = f(x)} conditional on some other variable(s) (say, conditional on a factor \code{g}), you would group by
\code{g}, then use \code{.along = x} to calculate intervals jointly over \code{x} conditional on \code{g}.}

\item{.width}{vector of probabilities to use that determine the widths of the resulting intervals.
If multiple probabilities are provided, multiple rows per group are generated, each with
a different probability interval (and value of the corresponding \code{.width} column).}

\item{.simple_names}{When \code{TRUE} and only a single column / vector is to be summarized, use the
name \code{.lower} for the lower end of the interval and \code{.upper} for the
upper end. If \code{.data} is a vector and this is \code{TRUE}, this will also set the column name
of the point summary to \code{.value}. When \code{FALSE} and \code{.data} is a data frame,
names the lower and upper intervals for each column \code{x} \code{x.lower} and \code{x.upper}.
When \code{FALSE} and \code{.data} is a vector, uses the naming scheme \code{y}, \code{ymin}
and \code{ymax} (for use with ggplot).}

\item{na.rm}{logical value indicating whether \code{NA} values should be stripped before the computation proceeds.
If \code{FALSE} (the default), any vectors to be summarized that contain \code{NA} will result in
point and interval summaries equal to \code{NA}.}

\item{.exclude}{A character vector of names of columns to be excluded from summarization
if no column names are specified to be summarized. Default ignores several meta-data column
names used in tidybayes.}

\item{x}{vector to summarize (for interval functions: \code{qi} and \code{hdi})}
}
\value{
A data frame containing point summaries and intervals, with at least one column corresponding
to the point summary, one to the lower end of the interval, one to the upper end of the interval, the
width of the interval (\code{.width}), the type of point summary (\code{.point}), and the type of interval (\code{.interval}).
}
\description{
Translates draws from distributions in a grouped data frame into a set of point and
interval summaries using a curve boxplot-inspired approach.
}
\details{
TODO: insert algorithm details
}
\examples{

}
\author{
Matthew Kay
}
